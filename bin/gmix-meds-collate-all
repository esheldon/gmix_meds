#!/usr/bin/env python
"""
    %prog [options] run
    
If image ids etc. are not in the meds files, first run with
    --cache
to generate the cache for all tiles.  This is good becuase we can't
have too many concurrent connections

e.g.
    gfme004grizt
    gfme004grizt

"""

from __future__ import print_function
import sys
import json
import fitsio

import desdb
import deswl
import gmix_meds

from gmix_meds.collate import ConcatError

from optparse import OptionParser
parser = OptionParser(__doc__)
parser.add_option('--verify',action='store_true',
                  help="just verify the data")
parser.add_option('--noblind',action='store_true',
                  help="don't blind the catalog")
parser.add_option('--clobber',action='store_true',
                  help="clobber existing catalog, else skip over")
parser.add_option('--cache',action='store_true',
                  help="just generate the cache")

def main():
    options, args = parser.parse_args(sys.argv[1:])
    if len(args) < 1:
        parser.print_help()
        sys.exit(45)

    run=args[0]

    if options.noblind:
        blind=False
    else:
        blind=True

    tilenames=gmix_meds.dbload.get_tilenames(run)

    print('found',len(tilenames),'tiles')

    for tilename in tilenames:
        print(tilename)

    print()
    for tilename in tilenames:
        print('-'*70)
        try:
            tc=gmix_meds.collate.TileConcat(run, tilename,
                                            blind=blind,
                                            clobber=options.clobber)
            if options.cache:
                tc.cache_allband_se_image_ids()
                tc.cache_coadd_objects_info()
            elif options.verify:
                tc.verify()
            else:
                tc.concat()

        except ConcatError as e:
            print("\nerror found: %s" % str(e))
            print("continuing\n")


main()
