#!/usr/bin/env python
import os
import sys
import numpy
import fitsio
from glob import glob
import copy
from gmix_meds.nbrsfofs import NbrsFoF

from optparse import OptionParser
usage = """usage: %prog [options] config

Use the same config file as nbrslist data."""
parser = OptionParser(usage=usage)

parser.add_option("--file-range",default=None,
                  help=("Inclusive, zero-offset range of Nbrs files to process as comma spearated list (e.g., '1,2')"))
parser.add_option("--get-num-files",default=False,action="store_true",
                                    help=("Print the number of Nbrs files to process to stdout and return"))
parser.add_option("--nbrs-file",default=None,
                  help=("A single nbrs file to process"))

def run_fofs_file(nbrs_file):
    """
    Make FoFs for a single file.
    """
    nbrs_data = fitsio.read(nbrs_file)
    fofs = NbrsFoF(nbrs_data)
    fof_file = nbrs_file.replace('-nbrslist-','-nbrsfofs-')    
    fofs.write_fofs(fof_file)
    
def get_nbrs_files(meds_version,nbrs_version):
    """
    Get all Nbrs dirs to process.
    """
    pattern = "$DESDATA/EXTRA/meds/{meds_version}/nbrs-data/{nbrs_version}/*/*-nbrslist-*"
    pattern = pattern.format(meds_version=meds_version,nbrs_version=nbrs_version)
    pattern = os.path.expandvars(pattern)
    nbrs_files = glob(pattern)
    nbrs_files.sort()
    return nbrs_files

def run_fofs(meds_version,nbrs_version,file_range=None):
    """
    Make FoFs for all nbrs files.
    """
    nbrs_files = get_nbrs_files(meds_version,nbrs_version)

    if file_range is None:
        file_range = [0,len(nbrs_files)-1]

    for dind in xrange(file_range[0],file_range[1]+1):
        nbrs_file = nbrs_files[dind]
        run_fofs_file(nbrs_file)

def read_yaml(config_path):
    """
    read from the file assuming it is yaml
    """
    import yaml
    with open(config_path) as fobj:
        conf=yaml.load(fobj)
    return conf
        
def main():
    options, args = parser.parse_args(sys.argv[1:])
    if options.nbrs_file is not None:
        run_fofs_file(options.nbrs_file)
    else:
        if len(args) == 0:
            parser.print_help()
            sys.exit(45)

        conf = read_yaml(args[0])
        meds_version = conf['meds_version']
        nbrs_version = conf['nbrs_version']
        if options.get_num_files:
            print len(get_nbrs_files(meds_version,nbrs_version))
        else:
            if options.file_range is not None:
                file_range = [int(el) for el in options.file_range.split(',')]
            else:
                file_range = None
                
            run_fofs(meds_version,nbrs_version,file_range=file_range)

if __name__ == '__main__':
    main()
                                                        
