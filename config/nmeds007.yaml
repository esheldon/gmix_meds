# flat priors
fitter: "ngmix"
fitter_class: "mh"

#nu: 5.0
nu: 0.0

mh_burnin: 5000
mh_nstep: 5000

emcee_a: 2.0
emcee_nwalkers: 20
emcee_burnin: 400
emcee_nstep: 800

psf_em_pars:
    ngauss: 3
    ntry: 20
    maxiter: 5000
    tol: 5.0e-6

gal_lm_ntry: 10

gal_lm_pars:
    maxfev: 300
    ftol:   1.0e-6
    xtol:   1.0e-6
    epsfcn: 1.0e-6


# at least one band must have s/n > this or
# we won't fit the slow mcmc 
min_psf_s2n: 4

#region: "seg_and_sky"
region: "cweight-nearest"

# in arcsec
psf_offset_max: 0.25

max_box_size: 192

# in addition to gauss fit on coadd and a psf flux
fit_models: ['exp','dev']

# we still do psf
#fit_me_galaxy: False
fit_me_galaxy: True

do_shear: True

reject_outliers: True

# note the coadd_gauss fit will share the priors with the first one
# of these
#joint_prior: "great3-rgc-exp-hybrid-cosmosg-deep03"
#cen_width: 0.27

use_cen_prior: True
cen_width: 0.27

# from fitting to all cosmos galaxies in galsim data
g_prior_types: ["cosmos-sersic","cosmos-sersic"]

#par_scaling: "linear"

# note sigma for dev goes larger
T_prior_types: ["flat","flat"]
counts_prior_types: ["flat","flat"]

# allow T to go negative about as large as we think the psf might be
# positive
#T_prior_pars: [ [-2.0, 3500.],[-2.0, 35000.] ]
# log(1-0.97)=-1.5
# log(3500.)=3.54
# log(35000.)=4.54
T_prior_pars: [ [-0.97, 3500.],[-0.97, 35000.] ]
counts_prior_pars: [ [-0.97, 1.0e+09],[-0.97, 1.0e+09] ]

#counts_prior_types: ["flat","flat"]
#counts_prior_pars: [ [-100.0, 1.0e+09],[-100.0, 1.0e+09] ]
#counts_prior_pars: [ [0.0001, 1.0e+09],[0.0001, 1.0e+09] ]

#T_prior_types: ["TwoSidedErf","TwoSidedErf"]
#T_prior_pars: [ [-0.07, 0.03, 3700., 100.0], [-0.05, 0.05, 37000., 1000.0] ]

#counts_prior_types: ["TwoSidedErf","TwoSidedErf"]
#counts_prior_pars: [ [-1.0, 0.1, 1.0e+09, 0.25e+08],[-1.0, 0.1, 1.0e+09, 0.25e+08] ]


# this means repeat the above for each band
counts_prior_repeat: True

guess_type: 'coadd_mcmc'

# checkpoint times in minutes, needed for condor in case we pass a batch system
# limit such as in the condor scavenge.
# 0 means after the first object

checkpoints: [30,60,110]
